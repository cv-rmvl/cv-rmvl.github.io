import{_ as a,c as i,a as n,o as e}from"./app-VSAb6bPd.js";const l={};function p(t,s){return e(),i("div",null,s[0]||(s[0]=[n(`<p>RMVL 主仓库为硬件设备的二次开发、网络通信、串口通信以及运动、控制、视觉算法提供了相应的支持库，为工业、日常环境下某些特征的识别、追踪等提供了完整的流程。</p><p>同时，RMVL 也配备了比较完善的基础开发工具，例如文档、插件等，下文列举了部分内容。</p><h2 id="库资源" tabindex="-1"><a class="header-anchor" href="#库资源"><span>库资源</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>点击<a href="https://github.com/cv-rmvl/rmvl" target="_blank" rel="noopener noreferrer">此处</a>可查看源码。</p></div><p>RMVL 的所有功能在设计之初秉持着依赖最小化的原则，非必要不引入除 STL、硬件 SDK、OpenCV 以及 Eigen 3 以外的第三方库，若一旦引入将会以 <code>3rdparty</code> 的形式存储在 RMVL 中，并由 CMake 编译选项自动管理构建，这将利于降低初次构建 RMVL 的学习成本。为了提高 RMVL 的隔离性，所有的类、参数变量、全局函数等实体均定义在了 <code>rm</code> 命名空间下，例如，若要使用 2 阶 Runge-Kutta 中点公式求解一阶常微分方程，可使用以下代码完成。</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rm</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Ode dot_x1 </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [](</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">double</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> t</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> std</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">vector</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">double</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">x</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> return</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> t</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rm</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">RungeKutta2</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> rk</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">dot_x1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 构建中点公式</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">rk</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">              // 设置初值</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">rk</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">solve</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0.01</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">          // 迭代求解</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，RMVL 提供了便捷的参数管理功能，使用一组 CMake 宏和相应的 <code>*.para</code> 文件即可完成参数模块的变量定义、注释、默认值、运行期加载的功能，该功能依赖 OpenCV 的 <code>cv::FileStorage</code>。</p><h3 id="主要模块" tabindex="-1"><a class="header-anchor" href="#主要模块"><span>主要模块</span></a></h3><p>RMVL 的主要模块包括数据结构与算法、硬件设备二次开发库、数值计算库、工业互联网 <code>OPC UA</code> 通信协议等内容，这些内容作为主要模块分布在项目的 <code>modules</code> 文件夹中。</p><h3 id="扩展模块" tabindex="-1"><a class="header-anchor" href="#扩展模块"><span>扩展模块</span></a></h3><p>RMVL 的扩展模块包括由特征 <code>feature</code>、特征组合 <code>combo</code>、追踪器 <code>tracker</code> 和序列组 <code>group</code> 组成的 <strong>数据组件</strong> ，由检测和识别模块 <code>detector</code>、补偿模块 <code>compensator</code>、目标预测模块 <code>predictor</code> 和决策模块 <code>decider</code> 组成的 <strong>功能模块</strong> ，这些模块分布在项目的 <code>extra</code> 文件夹中。</p><p>扩展模块是视觉程序处理的主要模块，RMVL 采用类似于责任链的设计模式管理了所有扩展模块，具体细节可参考<a href="https://cv-rmvl.github.io/docs/master/d2/de3/tutorial_extra_upper_process.html" target="_blank" rel="noopener noreferrer">此文档</a>。</p><h3 id="参数模块" tabindex="-1"><a class="header-anchor" href="#参数模块"><span>参数模块</span></a></h3><p>可以使用 <code>rmvl_generate_para</code> CMake 宏生成参数模块的 C/C++ 文件，例如原先的文件架构为</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── CMakeLists.txt</span></span>
<span class="line"><span>├── include</span></span>
<span class="line"><span>│   └── rmvl</span></span>
<span class="line"><span>│       ├── aa</span></span>
<span class="line"><span>│       │   ├── a1.hpp</span></span>
<span class="line"><span>│       │   └── a2.hpp</span></span>
<span class="line"><span>│       └── aa.hpp</span></span>
<span class="line"><span>├── param</span></span>
<span class="line"><span>│   └── a1.para</span></span>
<span class="line"><span>└── src</span></span>
<span class="line"><span>    ├── a1</span></span>
<span class="line"><span>    │   └── a1.cpp</span></span>
<span class="line"><span>    └── a2</span></span>
<span class="line"><span>        ├── a2_impl.cpp</span></span>
<span class="line"><span>        └── a2.cpp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>a1.para</code> 是希望用于生成参数模块 C/C++ 文件的参数规范文件。</p><p>在 CMakeLists.txt 中添加模块（一般是 <code>add_library(aa XXX)</code> 或者 RMVL 中的 <code>rmvl_add_module(aa XXX)</code>）之前的位置写上</p><div class="language-cmake line-numbers-mode" data-ext="cmake" data-title="cmake"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">rmvl_generate_para(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  a1</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  MODULE aa</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>即可生成 <code>aa/a1</code> 的参数模块，在文件末尾写上</p><div class="language-cmake line-numbers-mode" data-ext="cmake" data-title="cmake"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">rmvl_generate_module_para(aa)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即可生成 <code>aa</code> 参数模块的汇总头文件。</p><p>运行 <code>cmake ..</code> 后的文件结构如下</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── CMakeLists.txt</span></span>
<span class="line"><span>├── include</span></span>
<span class="line"><span>│   ├── rmvl</span></span>
<span class="line"><span>│   │   ├── aa</span></span>
<span class="line"><span>│   │   │   ├── a1.hpp</span></span>
<span class="line"><span>│   │   │   └── a2.hpp</span></span>
<span class="line"><span>│   │   └── aa.hpp</span></span>
<span class="line"><span>│   └── rmvlpara</span></span>
<span class="line"><span>│       ├── aa</span></span>
<span class="line"><span>│       │   └── a1.h</span></span>
<span class="line"><span>│       └── aa.hpp</span></span>
<span class="line"><span>├── param</span></span>
<span class="line"><span>│   └── a1.para</span></span>
<span class="line"><span>└── src</span></span>
<span class="line"><span>    ├── a1</span></span>
<span class="line"><span>    │   ├── a1.cpp</span></span>
<span class="line"><span>    │   └── para</span></span>
<span class="line"><span>    │       └── param.cpp</span></span>
<span class="line"><span>    └── a2</span></span>
<span class="line"><span>        ├── a2_impl.cpp</span></span>
<span class="line"><span>        └── a2.cpp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中新生成的文件为 <code>include/rmvlpara/**</code> 和 <code>src/a1/para/**</code>。</p><p>有关库资源的内容可参考<a href="https://cv-rmvl.github.io/docs/master/d1/dfb/intro.html" target="_blank" rel="noopener noreferrer">此文档</a>。</p><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件"><span>插件</span></a></h2><p>RMVL 提供了 Visual Studio Code 代码编辑器的插件，可在扩展商店中搜索 <code>RMVL Parameters and CMake</code> （后文简称 rmvl-extension）进行下载，自 RMVL <code>1.2.0</code> 版本起，rmvl-extension 与 RMVL 主存储库版本保持同步。也可在 <a href="https://github.com/cv-rmvl/rmvl-vscode-extension/releases" target="_blank" rel="noopener noreferrer">Github Release</a> 中的附件下载对应的 <code>vsix</code> 文件，并在 vscode 中手动安装。</p><p>rmvl-extension 提供了一组 RMVL 的 CMake 中使用的宏与函数，以及 <code>*.para</code> 参数规范文件的语法高亮、代码提示、悬浮提示与代码块。在安装此插件后，打开任一 CMake 文件或 <code>*.para</code> 文件均可激活此插件。此外，rmvl-extension 还提供了</p><ul><li>介绍 rmvl-extension，快捷键：<code>ctrl+r ctrl+w</code></li><li>快速资源搜索，快捷键：<code>ctrl+r ctrl+s</code></li></ul><p>的命令插件。</p>`,30)]))}const r=a(l,[["render",p],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/intro/","title":"RMVL 用户手册","lang":"zh-CN","frontmatter":{"title":"RMVL 用户手册"},"headers":[],"readingTime":{"minutes":3.3,"words":990},"git":{},"filePathRelative":"intro/README.md","categoryList":[{"id":"0b4b63","sort":10001,"name":"intro"}],"bulletin":false}');export{r as comp,c as data};
