import{_ as n,c as o,a as s,b as t,d as i,e as d,w as r,r as l,o as p}from"./app-BM4xnC-n.js";const h={};function c(k,e){const a=l("RouteLink");return p(),o("div",null,[e[9]||(e[9]=s('<div class="hint-container important"><p class="hint-container-title">写在前面</p><p>本篇文档收录了 RMVL 的常见问题，在查阅教程文档无法解决的情况下，或许可以在此找到解决措施。另外，欢迎随时加入 RMVL 的 QQ 群与我们交流</p></div><h2 id="_1-安装与配置" tabindex="-1"><a class="header-anchor" href="#_1-安装与配置"><span>1. 安装与配置</span></a></h2><h3 id="_1-1-如何在-windows-上使用-rmvl" tabindex="-1"><a class="header-anchor" href="#_1-1-如何在-windows-上使用-rmvl"><span>1.1 如何在 Windows 上使用 RMVL？</span></a></h3>',3)),t("p",null,[e[1]||(e[1]=i("RMVL 的 ")),e[2]||(e[2]=t("code",null,"2.1.1",-1)),e[3]||(e[3]=i(" 版本起可直接在 Github 下载预编译的可执行文件，例如 ")),e[4]||(e[4]=t("code",null,"2.1.1",-1)),e[5]||(e[5]=i(" 版本可直接点击")),e[6]||(e[6]=t("a",{href:"https://github.com/cv-rmvl/rmvl/releases/download/2.1.1/RMVL-2.1.1-amd64-windows.exe",target:"_blank",rel:"noopener noreferrer"},"此处",-1)),e[7]||(e[7]=i("进行下载，下载完成后双击即可执行安装程序，具体教程可参考")),d(a,{to:"/quickstart/win.html"},{default:r(()=>e[0]||(e[0]=[i("此处")])),_:1}),e[8]||(e[8]=i("。"))]),e[10]||(e[10]=s('<hr><h3 id="_1-2-如果一定要源码编译-怎么在-windows-上启用-opc-ua-模块" tabindex="-1"><a class="header-anchor" href="#_1-2-如果一定要源码编译-怎么在-windows-上启用-opc-ua-模块"><span>1.2 如果一定要源码编译，怎么在 Windows 上启用 OPC UA 模块？</span></a></h3><p>首先，不管需不需要源码编译，要想使用 OPC UA 模块，都需要下载 Python3，因为 RMVL 的 OPC UA 模块是基于 <code>open62541</code> 的，而 <code>open62541</code> 的 CMake 配置需要借助于 Python3。可以直接在<a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener noreferrer">官网</a>下载 Python3，安装路径可以自行选择，这里不做要求。</p><p>话说回来，对于源码编译有两种方法</p><p>① 第一种需要安装 <code>Git</code>，在 CMake 配置时输入</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cmake</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -DBUILD_OPEN62541=ON</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ..</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>RMVL 会自动从 Github 下载对应版本的 <code>open62541</code>，自动开启 <code>WITH_OPEN62541</code>，并将 <code>rmvl_opcua</code> 模块添加至构建系统中。执行结束，若无报错则表示配置成功。</p><p>② 第二种方法需要自行下载 <code>open62541</code> 的源码，并进行编译，具体过程省略，这种方法需要在 CMake 配置时输入</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cmake</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -Dopen62541_DIR=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">path/to/open</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">62541&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ..</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中 <code>&lt;path/to/open62541&gt;</code> 为 <code>open62541Config.cmake</code> 文件的路径，假如 <code>open62541</code> 的安装路径为 <code>D:\\open62541</code>，则 <code>&lt;path/to/open62541&gt;</code> 为 <code>D:/open62541/lib/cmake/open62541</code>，也就是说，进行 CMake 配置时需要输入</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cmake</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -Dopen62541_DIR=D:/open62541/lib/cmake/open62541</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ..</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>以上都假设在 <code>build</code> 文件夹下进行 CMake 配置，也建议使用 <code>build</code> 作为文件夹名</p></div><h2 id="_2-主要模块" tabindex="-1"><a class="header-anchor" href="#_2-主要模块"><span>2. 主要模块</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>暂无内容</p></div>',14))])}const g=n(h,[["render",c]]),u=JSON.parse('{"path":"/etc/faq.html","title":"常见问题","lang":"zh-CN","frontmatter":{"title":"常见问题","description":"写在前面 本篇文档收录了 RMVL 的常见问题，在查阅教程文档无法解决的情况下，或许可以在此找到解决措施。另外，欢迎随时加入 RMVL 的 QQ 群与我们交流 1. 安装与配置 1.1 如何在 Windows 上使用 RMVL？ RMVL 的 2.1.1 版本起可直接在 Github 下载预编译的可执行文件，例如 2.1.1 版本可直接点击此处进行下载...","head":[["meta",{"property":"og:url","content":"https://cv-rmvl.github.io/etc/faq.html"}],["meta",{"property":"og:site_name","content":"RMVL 用户手册"}],["meta",{"property":"og:title","content":"常见问题"}],["meta",{"property":"og:description","content":"写在前面 本篇文档收录了 RMVL 的常见问题，在查阅教程文档无法解决的情况下，或许可以在此找到解决措施。另外，欢迎随时加入 RMVL 的 QQ 群与我们交流 1. 安装与配置 1.1 如何在 Windows 上使用 RMVL？ RMVL 的 2.1.1 版本起可直接在 Github 下载预编译的可执行文件，例如 2.1.1 版本可直接点击此处进行下载..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-29T13:49:46.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-29T13:49:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-29T13:49:46.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":1.54,"words":461},"git":{"updatedTime":1743256186000,"contributors":[{"name":"zhaoxi","username":"zhaoxi","email":"535394140@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/zhaoxi?v=4","url":"https://github.com/zhaoxi"}]},"autoDesc":true,"filePathRelative":"etc/faq.md","categoryList":[{"id":"e80f17","sort":10001,"name":"etc"}],"bulletin":true}');export{g as comp,u as data};
